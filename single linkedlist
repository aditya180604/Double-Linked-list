package Linked_List;

import java.util.Scanner;

import DLL.Node;

public class SLL {

	
	class Node {
      int data;
	  Node next;

		public Node(int data) {
			this.data = data;
			this.next = null;
		}
	}
	Node head = null;
	Node tail = null;
	
	public void addNodeAtTheBeginning(int data) {
        
		Node newNode = new Node(data);
		if (this.head == null) {
			this.head = newNode;
		} else {
			newNode.next = this.head;

			this.head = newNode;
		}
	}
  
 
	public void addNodeAtTheEnd(int data) {
        
	
		Node newNode = new Node(data);
		if (this.head == null) {
			this.head = newNode;
		} else {
			Node temp = this.head;
			while (temp.next != null) {
				temp = temp.next;
			}
			temp.next = newNode;
		}
	}
   
  
	public void addatspecificposition(int position, int data) {
       

		Node newNode = new Node(data);
		Node cur = this.head, prev = this.head;

		if (position == 1) {
			newNode.next = head;
			this.head = newNode;
			return;
		}
		while (cur.next != null && --position > 0) {
			prev = cur;
			cur = cur.next;
		}
		prev.next = newNode;

		newNode.next = cur;
	}
	
	

	public void showData() {  
        Node current = head;     
        if(head == null) {   
            System.out.println("List is empty");    
            return;    
        }   
        System.out.println("output is ");     
        while(current != null) {    
            
            System.out.print(current.data + " ");    
            current = current.next;    
        }    
    } 
  	
  	public void deleteFirst() {  
  	  
        if(head == null) {  
            System.out.println("List is empty");  
            return;  
        }  
        else {  
			Node tail = null;
			if(head != tail) {  
                head = head.next;  
            }  
              
            else {  
                head = null; 
                tail = null;
            }  
        }  
    }  
  	
  	public void deleteLast() {  
  		if(head == null) {  
            System.out.println("List is empty");  
  		}
  		 else {  
  			 Node temp=head;
 			while(temp.next.next!= null) {
 				temp=temp.next;	
 			}
 			temp.next=null;
 			
 			}     
  	}
  	
  	public void deletionatIndex() {
		Scanner sc=new Scanner(System.in);
		int n = sc.nextInt();
		Node temp=this.head;
		while(temp!=null &n>2) {
			temp=temp.next;
			n--;
		}
		if (n>2) {
			System.out.println("not enough elements!!!");
		}
		else {
			Node temp1=temp.next.next;
			temp.next=temp1;
		}
  	}
  	public static void main(String[] args) {
        SLL obj = new SLL();
        Scanner k=new Scanner(System.in);
        
        while(true) {
        	System.out.println("for adding elements: press 1");
        	System.out.println("for adding at beginning: press 2");
        	System.out.println("for adding at end: press 3");
        	System.out.println("for adding at specified position: press 4");
        	System.out.println("for deleting the element at first: press 5");
        	System.out.println("for deleting the element at the end: press 6");
        	System.out.println("for deleting the element at specified position: press 7");
        	
        	
        	int choice=k.nextInt();
        	if (choice==1) {
        		System.out.println("Enter the data: ");
        		int d=k.nextInt();
        		
        	}
        	else if (choice==2) {
        		System.out.println("Enter the data at beginnig: ");
        		int d=k.nextInt();
        		obj.addNodeAtTheBeginning(d);
        		
        	}
        	else if (choice==3) {
        		System.out.println("Enter the data at end: ");
        		int d=k.nextInt();
        		
        		obj.addNodeAtTheEnd(d);
        		
        	}
        	else if (choice==4) {
        		System.out.println("Enter the data at specified : ");
        		int d=k.nextInt();
  
        		obj.addatspecificposition(d, d);
        		
        	}
        	else if (choice==5) {
        	    obj.deleteFirst();
        		
        	}
        	else if (choice==6) {
        		System.out.println("Enter the data to be deleteatend: ");
        		obj.deleteLast();
        	}
        	else if (choice==7) {
        		System.out.println("Enter the data to be deleteatspecific: ");
        		obj.deletionatIndex();
        	}
        	else {
        		break;
        	}	
        }	
  	
        	obj.showData();
        		    
  	}
}
